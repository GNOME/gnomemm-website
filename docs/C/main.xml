<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book [
  <!ENTITY gtkmm "<application xmlns='http://docbook.org/ns/docbook'>gtkmm</application>">
]>

<article xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.0" xml:id="index">
    <title/>
      <note>
      <para>
   &gtkmm; is the official C++ interface for the popular GUI library
   <link xlink:href="https://www.gtk.org/">GTK</link>. Highlights include
   typesafe callbacks, and a comprehensive set of widgets that are
   easily extensible via inheritance. You can create user interfaces
   either in code or with the <link xlink:href="https://gitlab.gnome.org/jpu/cambalache">
   Cambalache User Interface designer</link>, using Gtk::Builder. There's
   <link xlink:href="documentation.html">extensive documentation</link>,
   including API reference and a tutorial.
  </para>
      <para>
   &gtkmm; is free software distributed under the GNU Lesser General
    Public License (<link xlink:href="license.html">LGPL</link>).
  </para>
  <!-- 2022-02-04: Gtkmm is not released "on a predictable schedule" now.
       Hopefully it will in the future. Keep this paragraph as a comment.
      <para>
   &gtkmm; follows the official <link xlink:href="https://www.gnome.org/start/unstable/"> GNOME Platform Bindings release schedule</link>. This guarantees
   API/ABI-stability and new releases on a predictable schedule,
   delivering C++ API for the underlying GTK and GNOME APIs as soon as possible.
  </para>
  -->
    </note>

    <section>
    <title>Features</title>
      <para>
  <itemizedlist>
          <listitem>
            <para>Use inheritance to derive custom widgets.</para>
          </listitem>
          <listitem>
            <para>Type-safe signal handlers, in standard C++.</para>
          </listitem>
          <listitem>
            <para>Polymorphism.</para>
          </listitem>
          <listitem>
            <para>Use of Standard C++ Library, including strings, containers, and iterators.</para>
          </listitem>
          <listitem>
            <para>Full internationalisation with UTF8.</para>
          </listitem>
          <listitem>
            <para>Complete C++ memory management
    <itemizedlist>
                <listitem>
                  <para>Object composition</para>
                </listitem>
                <listitem>
                  <para>Automatic deallocation of dynamically allocated widgets.</para>
                </listitem>
              </itemizedlist>
   </para>
          </listitem>
          <listitem>
            <para>Full use of C++ namespaces.</para>
          </listitem>
          <listitem>
            <para>No macros.</para>
          </listitem>
          <listitem>
            <para>Cross-platform: Linux (gcc), FreeBSD (gcc), NetBSD (gcc), Solaris (gcc, Forte),
              Win32 (gcc, MSVC 2013 or later (gtkmm3), MSVC 2017 or later (gtkmm4)), MacOS X (gcc), others</para>
          </listitem>
          <listitem>
            <para>Free software and free of cost for both Open Source and
    proprietary development.</para>
          </listitem>
          <listitem>
            <para>Discussed, designed and implemented in public.</para>
          </listitem>
        </itemizedlist>
  </para>
    </section>

    <section>
    <title>Other gtkmm-related libraries</title>
   <para>
   gtkmm is a GUI toolkit and nothing more, and it strives to be the
   best C++ GUI toolkit. That mandate does not cover generic C++ data
   structures, an XML parser, or database access. Even our signal/slots
   system is part of a separate (<link xlink:href="https://libsigcplusplus.github.io/libsigcplusplus/">libsigc++</link>) library.
   However, gtkmm is designed to work well with all other C++ libraries.
   </para>
    <para>
    Be sure to check out our companion libraries,
    <link xlink:href="https://gnome.pages.gitlab.gnome.org/glibmm/">glibmm</link> (UTF8 strings, etc),
    <link xlink:href="https://gnome.pages.gitlab.gnome.org/pangomm/">pangomm</link> (font layout),
    <link xlink:href="https://libsigcplusplus.github.io/libsigcplusplus/">libsigc++</link> (signal/slots) and
    <link xlink:href="https://libxmlplusplus.github.io/libxmlplusplus/">libxml++</link> (XML parser).
   </para>
    </section>
  </article>
